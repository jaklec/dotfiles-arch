snippet make "Simple Makefile"
.PHONY: all

all: ${1:myfile.c}
	gcc -O3 --std=c99 -Wall -Wpedantic ${2:myfile.c} -o ${3:myfile}$0
endsnippet

snippet makecm "Using Make to drive CMake and Ninja"
.PHONY: default project mktarget compile run clean cleanall

BIN=$0

default: compile

project: mktarget
	bash -c 'pushd ./target/default && conan install --build missing ../.. && popd'
	bash -c 'pushd ./target/default && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -GNinja ../.. && popd'
	mv ./target/default/compile_commands.json .

mktarget:
	mkdir -p ./target/default

compile: project
	bash -c 'pushd ./target/default && ninja && popd'

run:
	./target/default/bin/${BIN}

clean:
	bash -c 'rm -r ./target/default/{bin,lib}/'

cleanall:
	rm -rf ./target
endsnippet


snippet makeasm "Simple Makefile (assembly flavor)"
.PHONY: run build relase clean

BIN=${1:my-binary}$0
TARGET_DIR=target
DEBUG_DIR=$\{TARGET_DIR\}/debug
RELEASE_DIR=$\{TARGET_DIR\}/release
SOURCES=$(wildcard src/*.asm)
DEBUG_OBJECTS=$(patsubst src/%.asm, $(DEBUG_DIR)/%.o, $(SOURCES))
RELEASE_OBJECTS=$(patsubst src/%.asm, $(RELEASE_DIR)/%.o, $(SOURCES))

build: $(DEBUG_DIR)/$(BIN)
	
run: build
	./$(DEBUG_DIR)/$(BIN)

release: $(RELEASE_DIR)/$(BIN)

$(DEBUG_OBJECTS): $\{SOURCES\} | $\{DEBUG_DIR\}
	nasm -f elf64 -F dwarf -g $^ -o $@

$(TARGET_DIR):
	mkdir $@

$(DEBUG_DIR)/$(BIN): $\{DEBUG_OBJECTS\}
	ld  -o $@ $^

$(DEBUG_DIR):
	mkdir -p $@

$(RELEASE_OBJECTS): $\{SOURCES\} | $\{RELEASE_DIR\}
	nasm -f elf64 $^ -o $@

$(RELEASE_DIR)/$(BIN): $\{RELEASE_OBJECTS\}
	ld -o $@ $^

$(RELEASE_DIR):
	mkdir -p $@

clean:
	rm -rf target
endsnippet
