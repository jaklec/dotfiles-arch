snippet k8s_pod "Pod template for k8s"
apiVersion: v1
kind: Pod
metadata:
  name: test-pod
spec:
  containers:
    - name: test-container
      image: k8s.gcr.io/busybox
      env:
        - name: DB_URL
          value: postgres:db_url/5432
endsnippet

snippet k8s_deployment "Deployment template for k8s"

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp 
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp 
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: app-config # from existing config map: kubectl create config app-config --from-file=./config.yaml
      containers:
        - name: go-url-shortener 
          image: xcoulon/go-url-shortener:0.1.0 
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          ports:
            - containerPort: 8080 
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: CONFIG_FILE
              value: /etc/config/config.yaml
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: database-secret-config
                  key: dbname
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: database-secret-config
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secret-config
                  key: password
endsnippet

snippet k8s_service "Service template for k8s"
apiVersion: v1
kind: Service
metadata:
  name: webapp 
spec:
  type: NodePort
  ports:
    - nodePort: 31317
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: webapp 
endsnippet

snippet k8s_secret "Secret template for k8s"
apiVersion: v1
kind: Secret
metadata:
  name: database-secret-config
type: Opaque
data:
  dbname: dXJsX3Nob3J0ZW5lcl9kYg==
  username: dXNlcg==
  password: bXlzZWNyZXRwYXNzd29yZA== # echo -n "mysecretpassword" | base64 -
endsnippet

snippet docker_compose "Example docker compose file"
version: '3'

services:
  postgres:
    image: 'postgres:10'
    container_name: 'postgres-local'
    ports:
      - 5432:5432
    networks:
      - pg-network
    environment:
      - POSTGRES_USER=developer
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=dev
    volumes:
      - ../data/pgdata:/var/lib/postgresql/data
networks:
  pg-network:
    driver: bridge
endsnippet
